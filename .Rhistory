five<-read.csv()
five<-read.csv(file=file.choose())
six<-read.csv(file=file.choose())
seven<-read.csv(file=file.choose())
eight<-read.csv(file=file.choose())
nine<-read.csv(file=file.choose())
str(five)
View(five)
str(five)
View(five)
five<-read.csv(file=file.choose())
View(five)
five<-read.csv(file=file.choose())
a<-read.csv(file=file.choose())
View(a)
b<-read.csv(file=file.choose())
View(b)
c<-read.csv(file=file.choose())
View(c)
View(c)
five<-read.csv(file=file.choose())
View(five)
five<-read.csv(file=file.choose())
six<-read.csv(file=file.choose())
eight<-read.csv(file=file.choose())
nine<-read.csv(file=file.choose())
str(five)
View(six)
View(a)
View(a)
View(five)
View(six)
View(seven)
View(nine)
View(six)
View(seven)
View(five)
View(six)
six<-read.csv(file=file.choose())
View(six)
View(seven)
seven<-read.csv(file=file.choose())
View(seven)
eight<-read.csv(file=file.choose())
View(eight)
View(nine)
#check that what you have in your dataset is correct ahaha (I didn't get it right at first maronne mi)
newdataset<-rbind(five,six)
View(newdataset)
#check that what you have in your dataset is correct ahaha (I didn't get it right at first maronne mi)
newdataset<-rbind(five,six,seven,eight,nine)
View(newdataset)
summary(object=newdataset)
sd(x=bgdata, na.rm=TRUE) #standard deviation
sd(x=bgdata$Ozone, na.rm=TRUE) #standard deviation
sd(x=newdataset, na.rm=TRUE) #standard deviation
sd(x=newdataset$Ozone, na.rm=TRUE) #standard deviation
min(x=newdataset$Ozone, na.rm=TRUE)
max(x=newdataset$Ozone, na.rm=TRUE)
View(newdataset)
temperature.mean<-c(1,7,10)
temperature.mean
summary(object=newdataset)
sd(x=newdataset$Ozone, na.rm=TRUE) #standard deviation
install.packages(modMax)
install.packages(modMax)
install.packages("modMax")
pwd
library(igraph)
make_empty_graph(n = 0, directed = TRUE)
make_empty_graph(n = 5, directed = TRUE)
G = make_empty_graph(n = 5, directed = TRUE)
G
plot(G)
G = make_empty_graph(n = 5, directed = TRUE) %>%
add_edges(c(1,2, 2,3, 3,4, 4,5))
plot(G)
G = make_empty_graph(n = 5, directed = TRUE) %>%
add_edges(c(1,3, 2,3, 3,4, 3,5))
plot(G)
G = make_empty_graph(n = 5, directed = TRUE) %>%
add_edges(c(1,3, 2,3, 3,4, 3,5))
plot(G)
plot(G)
plot(G)
plot(G)
plot(G)
plot(G)
plot(G)
plot(G)
plot(G)
plot(G)
G = make_empty_graph(n = 6, directed = TRUE) %>%
add_edges(c(1,3, 2,3, 3,4, 3,5, 3,6))
plot(G)
plot(G)
plot(G)
#IGRAPH
G = make_empty_graph(n = 6, directed = TRUE) %>%
add_edges(c(1,3, 2,3, 3,4, 3,5))
plot(G)
G = make_empty_graph(n = 5, directed = TRUE) %>%
add_edges(c(1,3, 2,3, 3,4, 3,5))
plot(G)
as.matrix(read.csv(/Users/ema/github/data_aggregation/data/ecobase/adjacency_matrices/A_loops_001.txt, header= FALSE)
A = as.matrix(read.csv('/Users/ema/github/data_aggregation/data/ecobase/adjacency_matrices/A_loops_001.txt', header= FALSE)
A = as.matrix(read.csv('/Users/ema/github/data_aggregation/data/ecobase/adjacency_matrices/A_loops_001.txt', header= FALSE)
A = as.matrix(read.csv('/Users/ema/github/data_aggregation/data/ecobase/adjacency_matrices/A_loops_001.txt', header= FALSE)
A = as.matrix(read.csv('/Users/ema/github/data_aggregation/data/ecobase/adjacency_matrices/A_loops_001.txt', header= FALSE))
A = as.matrix(read.csv('/Users/ema/github/data_aggregation/data/ecobase/adjacency_matrices/A_loops_001.txt', header= FALSE))
Tmx = A
nodes_number = sqrt(length(A))
for (predator in 1:nodes_number){
for (prey in 1:nodes_number)
if (Tmx[predator,prey]!=0)
Tmx[predator,prey]<-A[predator,prey]/sum(A[predator,])
}
diet = numeric(nodes_number)
for (node in 1:nodes_number){
diet[node]<-sum(Tmx[node,])
}
sou = which(diet==0) #which=position of the certain values.
names(sou)<-nodeID[sou] #names=names the coloumns/rows
Qmx = Tmx
for (i in 1:length(sou)) {
Qmx = Qmx[-which(rownames(Qmx)==names(sou[i])),] #find the number of row of the species in sou. The minus sign removes the certain coloumn/row.
Qmx = Qmx[,-which(colnames(Qmx)==names(sou[i]))] #find the number of coloumn of the species in sou
}
Imx = matrix(rep(0,(nodes_number-length(sou))^2),nrow=(nodes_number-length(sou)),ncol=(nodes_number-length(sou)))
for (i in 1:(nodes_number-length(sou)))
Imx[i,i]<-1
vw = rep(1, (nodes_number-length(sou))) #repeat 1 for a number of times that is nodes_number-length(sou).
TP = solve((Imx-Qmx),vw) #MMMMMM
names(TP)<-rownames(Qmx)
soutp = sou
for (i in 1:length(soutp))
soutp[i]<-0
TP = c(soutp,TP)
Tmx = A
nodes_number = sqrt(length(A))
for (predator in 1:nodes_number){
for (prey in 1:nodes_number)
if (Tmx[predator,prey]!=0)
Tmx[predator,prey]<-A[predator,prey]/sum(A[predator,])
}
diet = numeric(nodes_number)
for (node in 1:nodes_number){
diet[node]<-sum(Tmx[node,])
}
sou = which(diet==0) #which=position of the certain values.
names(sou)<-nodeID[sou] #names=names the coloumns/rows
#This needs to be run after the analysis in MATLAB. It produces the figures and the table.
setwd('/Users/ema/github/data_aggregation')
rm(list = ls());
cat("\014");
library(igraph)
library(data.table)
library(dplyr)
library(formattable)
library(tidyr)
library(xtable)
library(stringi)
source('r/addFrontZeros.r')
source('r/writeRankingTables.r')
web = 37
A = as.matrix(read.csv(paste0('data/adjacency_matrices/Adjacency_matrix_web_', addFrontZeros(web), '.txt'), header = F))
coordinates_original = as.matrix(read.csv(paste0('r/plotting/coordinates_original_web_',web,'.csv'), header = F))
#Figure of the keystone species
source('r/save_figure_keystones.r')
caption = "Effect of aggregation on most the most important nodes in a food web. Red: central before and central after. Orange: central before and not central after. Purple: not central before and central after. Blue: not central before and not central after. The self-loops are not included in the figure for clarity. (a) = jaccard, (b) = rege, (c) = density-based modules, (d) = prey-based modules, (e) = predator-based modules, (f) = groups found by the group model. The food web of this figure is the one of the West Florida Shelf (Okey, 2004a)) and the largest network we used (55 nodes)."
write.table(caption, "latex/captions//caption_figure_keystone_species.txt", col.names = F, row.names = F)
#Figure of the aggregated webs
source('r/save_figure_aggregated_webs.r')
caption = "Aggregation of the food web of Figure 5 according to different clustering algortihms. The size of the nodes is prortional to the number of nodes that have been aggregated into them. The self-loops are not included in the figure for clarity. (a) = jaccard, (b) = rege, (c) = density-based modules, (d) = prey-based modules, (e) = predator-based modules, (f) = groups found by the group model. As you can see in (d), aggregation might cause to produce a node that is not connected to the rest of the network."
write.table(caption, "latex/captions/caption_figure_aggregated_webs.txt", col.names = F, row.names = F)
#Ranking table
centralities = paste(unlist(read.csv("results/tables/centralities.txt", header = F)))
for (centrality in 1:length(centralities)){
centralities[centrality] = paste0('\\(\\displaystyle ', centralities[centrality], " \\) &")
}
table = "rank_table"
caption = "\\caption{Table of the best Kendallâ€™s correlation coefficients. They are ranked from the clustering that produced the best correlation, to the clustering that produced the worst correlation.  {\\color[HTML]{00D768} Green = hierarchical clustering with Jaccard index}, {\\color[HTML]{EF2A00} red = hierarchical clustering with REGE index}, {\\color[HTML]{9B9B9B} grey = density-based modules}, {\\color{orange} yellow = prey-based modules}, {\\color[HTML]{0051D7} blue = predator-based modules}, {\\color[HTML]{6200D7} purple = groups produced by the group model}. C1 = Best clustering, C2 = second best clustering, C3 = third best clustering, C4 = fourth best clustering, C5 = fifth best clustering, C6 = sixth best clustering.}"
writeRankingTables(table,caption)
table = "rank_table_ci"
caption = "\\caption{Table S1. Confidence intervals of the mean Kendalls in Table 1 of the paper.}"
writeRankingTables(table,caption)
table = "rank_table_aggregations"
caption = "\\caption{Table S2. Combination of linkage method and interaction strength method that gave us the highest Kendall's correlation coefficient in Table 1 of the paper. Most of the cells do not containi the interaction strength method because they are computed upon a binary network.}"
writeRankingTables(table,caption)
#This needs to be run after the analysis in MATLAB. It produces the figures and the table.
setwd('/Users/ema/github/data_aggregation')
rm(list = ls());
cat("\014");
library(igraph)
library(data.table)
library(dplyr)
library(formattable)
library(tidyr)
library(xtable)
library(stringi)
source('r/addFrontZeros.r')
source('r/writeRankingTables.r')
web = 37
A = as.matrix(read.csv(paste0('data/adjacency_matrices/Adjacency_matrix_web_', addFrontZeros(web), '.txt'), header = F))
coordinates_original = as.matrix(read.csv(paste0('r/plotting/coordinates_original_web_',web,'.csv'), header = F))
#Figure of the keystone species
source('r/save_figure_keystones.r')
caption = "Effect of aggregation on most the most important nodes in a food web. Red: central before and central after. Orange: central before and not central after. Purple: not central before and central after. Blue: not central before and not central after. The self-loops are not included in the figure for clarity. (a) = jaccard, (b) = rege, (c) = density-based modules, (d) = prey-based modules, (e) = predator-based modules, (f) = groups found by the group model. The food web of this figure is the one of the West Florida Shelf (Okey, 2004a)) and the largest network we used (55 nodes)."
write.table(caption, "latex/captions//caption_figure_keystone_species.txt", col.names = F, row.names = F)
#Figure of the aggregated webs
source('r/save_figure_aggregated_webs.r')
caption = "Aggregation of the food web of Figure 5 according to different clustering algortihms. The size of the nodes is prortional to the number of nodes that have been aggregated into them. The self-loops are not included in the figure for clarity. (a) = jaccard, (b) = rege, (c) = density-based modules, (d) = prey-based modules, (e) = predator-based modules, (f) = groups found by the group model. As you can see in (d), aggregation might cause to produce a node that is not connected to the rest of the network."
write.table(caption, "latex/captions/caption_figure_aggregated_webs.txt", col.names = F, row.names = F)
#Ranking table
centralities = paste(unlist(read.csv("results/tables/centralities.txt", header = F)))
for (centrality in 1:length(centralities)){
centralities[centrality] = paste0('\\(\\displaystyle ', centralities[centrality], " \\) &")
}
table = "rank_table"
caption = "\\caption{Table of the best Kendallâ€™s correlation coefficients. They are ranked from the clustering that produced the best correlation, to the clustering that produced the worst correlation.  {\\color[HTML]{00D768} Green = hierarchical clustering with Jaccard index}, {\\color[HTML]{EF2A00} red = hierarchical clustering with REGE index}, {\\color[HTML]{9B9B9B} grey = density-based modules}, {\\color{orange} yellow = prey-based modules}, {\\color[HTML]{0051D7} blue = predator-based modules}, {\\color[HTML]{6200D7} purple = groups produced by the group model}. C1 = Best clustering, C2 = second best clustering, C3 = third best clustering, C4 = fourth best clustering, C5 = fifth best clustering, C6 = sixth best clustering.}"
writeRankingTables(table,caption)
table = "rank_table_ci"
caption = "\\caption{Table S1. Confidence intervals of the mean Kendalls in Table 1 of the paper.}"
writeRankingTables(table,caption)
table = "rank_table_aggregations"
caption = "\\caption{Table S2. Combination of linkage method and interaction strength method that gave us the highest Kendall's correlation coefficient in Table 1 of the paper. Most of the cells do not containi the interaction strength method because they are computed upon a binary network.}"
writeRankingTables(table,caption)
#This needs to be run after the analysis in MATLAB. It produces the figures and the table.
setwd('/Users/ema/github/data_aggregation')
rm(list = ls());
cat("\014");
library(igraph)
library(data.table)
library(dplyr)
library(formattable)
library(tidyr)
library(xtable)
library(stringi)
source('r/addFrontZeros.r')
source('r/writeRankingTables.r')
web = 37
A = as.matrix(read.csv(paste0('data/adjacency_matrices/Adjacency_matrix_web_', addFrontZeros(web), '.txt'), header = F))
coordinates_original = as.matrix(read.csv(paste0('r/plotting/coordinates_original_web_',web,'.csv'), header = F))
#Figure of the keystone species
source('r/save_figure_keystones.r')
caption = "Effect of aggregation on most the most important nodes in a food web. Red: central before and central after. Orange: central before and not central after. Purple: not central before and central after. Blue: not central before and not central after. The self-loops are not included in the figure for clarity. (a) = jaccard, (b) = rege, (c) = density-based modules, (d) = prey-based modules, (e) = predator-based modules, (f) = groups found by the group model. The food web of this figure is the one of the West Florida Shelf (Okey, 2004a)) and the largest network we used (55 nodes)."
write.table(caption, "latex/captions//caption_figure_keystone_species.txt", col.names = F, row.names = F)
#Figure of the aggregated webs
source('r/save_figure_aggregated_webs.r')
caption = "Aggregation of the food web of Figure 5 according to different clustering algortihms. The size of the nodes is prortional to the number of nodes that have been aggregated into them. The self-loops are not included in the figure for clarity. (a) = jaccard, (b) = rege, (c) = density-based modules, (d) = prey-based modules, (e) = predator-based modules, (f) = groups found by the group model. As you can see in (d), aggregation might cause to produce a node that is not connected to the rest of the network."
write.table(caption, "latex/captions/caption_figure_aggregated_webs.txt", col.names = F, row.names = F)
#Ranking table
centralities = paste(unlist(read.csv("results/tables/centralities.txt", header = F)))
for (centrality in 1:length(centralities)){
centralities[centrality] = paste0('\\(\\displaystyle ', centralities[centrality], " \\) &")
}
table = "rank_table"
caption = "\\caption{Table of the best Kendallâ€™s correlation coefficients. They are ranked from the clustering that produced the best correlation, to the clustering that produced the worst correlation.  {\\color[HTML]{00D768} Green = hierarchical clustering with Jaccard index}, {\\color[HTML]{EF2A00} red = hierarchical clustering with REGE index}, {\\color[HTML]{9B9B9B} grey = density-based modules}, {\\color{orange} yellow = prey-based modules}, {\\color[HTML]{0051D7} blue = predator-based modules}, {\\color[HTML]{6200D7} purple = groups produced by the group model}. C1 = Best clustering, C2 = second best clustering, C3 = third best clustering, C4 = fourth best clustering, C5 = fifth best clustering, C6 = sixth best clustering.}"
writeRankingTables(table,caption)
table = "rank_table_ci"
caption = "\\caption{Table S1. Confidence intervals of the mean Kendalls in Table 1 of the paper. {\\color[HTML]{00D768} Green = hierarchical clustering with Jaccard index}, {\\color[HTML]{EF2A00} red = hierarchical clustering with REGE index}, {\\color[HTML]{9B9B9B} grey = density-based modules}, {\\color{orange} yellow = prey-based modules}, {\\color[HTML]{0051D7} blue = predator-based modules}, {\\color[HTML]{6200D7} purple = groups produced by the group model}. C1 = Best clustering, C2 = second best clustering, C3 = third best clustering, C4 = fourth best clustering, C5 = fifth best clustering, C6 = sixth best clustering.}"
writeRankingTables(table,caption)
table = "rank_table_aggregations"
caption = "\\caption{Table S2. Combination of linkage method and interaction strength method that gave us the highest Kendall's correlation coefficient in Table 1 of the paper. Most of the cells do not containi the interaction strength method because they are computed upon a binary network. {\\color[HTML]{00D768} Green = hierarchical clustering with Jaccard index}, {\\color[HTML]{EF2A00} red = hierarchical clustering with REGE index}, {\\color[HTML]{9B9B9B} grey = density-based modules}, {\\color{orange} yellow = prey-based modules}, {\\color[HTML]{0051D7} blue = predator-based modules}, {\\color[HTML]{6200D7} purple = groups produced by the group model}. C1 = Best clustering, C2 = second best clustering, C3 = third best clustering, C4 = fourth best clustering, C5 = fifth best clustering, C6 = sixth best clustering.}"
writeRankingTables(table,caption)
