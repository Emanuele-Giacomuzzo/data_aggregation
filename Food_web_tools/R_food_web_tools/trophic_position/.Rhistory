five<-read.csv()
five<-read.csv(file=file.choose())
six<-read.csv(file=file.choose())
seven<-read.csv(file=file.choose())
eight<-read.csv(file=file.choose())
nine<-read.csv(file=file.choose())
str(five)
View(five)
str(five)
View(five)
five<-read.csv(file=file.choose())
View(five)
five<-read.csv(file=file.choose())
a<-read.csv(file=file.choose())
View(a)
b<-read.csv(file=file.choose())
View(b)
c<-read.csv(file=file.choose())
View(c)
View(c)
five<-read.csv(file=file.choose())
View(five)
five<-read.csv(file=file.choose())
six<-read.csv(file=file.choose())
eight<-read.csv(file=file.choose())
nine<-read.csv(file=file.choose())
str(five)
View(six)
View(a)
View(a)
View(five)
View(six)
View(seven)
View(nine)
View(six)
View(seven)
View(five)
View(six)
six<-read.csv(file=file.choose())
View(six)
View(seven)
seven<-read.csv(file=file.choose())
View(seven)
eight<-read.csv(file=file.choose())
View(eight)
View(nine)
#check that what you have in your dataset is correct ahaha (I didn't get it right at first maronne mi)
newdataset<-rbind(five,six)
View(newdataset)
#check that what you have in your dataset is correct ahaha (I didn't get it right at first maronne mi)
newdataset<-rbind(five,six,seven,eight,nine)
View(newdataset)
summary(object=newdataset)
sd(x=bgdata, na.rm=TRUE) #standard deviation
sd(x=bgdata$Ozone, na.rm=TRUE) #standard deviation
sd(x=newdataset, na.rm=TRUE) #standard deviation
sd(x=newdataset$Ozone, na.rm=TRUE) #standard deviation
min(x=newdataset$Ozone, na.rm=TRUE)
max(x=newdataset$Ozone, na.rm=TRUE)
View(newdataset)
temperature.mean<-c(1,7,10)
temperature.mean
summary(object=newdataset)
sd(x=newdataset$Ozone, na.rm=TRUE) #standard deviation
install.packages(modMax)
install.packages(modMax)
install.packages("modMax")
setwd("~/Google Drive/Github")
data<-read.table("Napoli.txt", header=F)
nodeID<-levels(factor(c(as.character(data[,1]),as.character(data[,2])))) #Factor=categorical variable c=combine as.charachter=whatever2char. This line takes all the values of the first two coloumns and stores them as levels of factor nodeID.
numnode<-length(nodeID)
mx<-matrix(rep(0,numnode^2),nrow=numnode,ncol=numnode)
rownames(mx)<-nodeID
colnames(mx)<-nodeID
for (i in 1:length(data[,1])){
mx[as.character(data[i,2]),as.character(data[i,1])]<-data[i,3]
}
setwd("~/Google Drive/Github/Food_web_tools/R_food_web_tools/trophic_position")
data<-read.table("Napoli.txt", header=F)
nodeID<-levels(factor(c(as.character(data[,1]),as.character(data[,2])))) #Factor=categorical variable c=combine as.charachter=whatever2char. This line takes all the values of the first two coloumns and stores them as levels of factor nodeID.
numnode<-length(nodeID)
mx<-matrix(rep(0,numnode^2),nrow=numnode,ncol=numnode)
rownames(mx)<-nodeID
colnames(mx)<-nodeID
for (i in 1:length(data[,1])){
mx[as.character(data[i,2]),as.character(data[i,1])]<-data[i,3]
}
View(mx)
mx$S59
Tmx<-mx
for (i in 1:numnode){
for (j in 1:numnode)
if (Tmx[i,j]!=0)
Tmx[i,j]<-mx[i,j]/sum(mx[i,])
}
View(Tmx)
data<-read.table("Napoli.txt", header=F)
nodeID<-levels(factor(c(as.character(data[,1]),as.character(data[,2])))) #Factor=categorical variable c=combine as.charachter=whatever2char. This line takes all the values of the first two coloumns and stores them as levels of factor nodeID.
numnode<-length(nodeID)
mx<-matrix(rep(0,numnode^2),nrow=numnode,ncol=numnode)
rownames(mx)<-nodeID
colnames(mx)<-nodeID
for (i in 1:length(data[,1])){
mx[as.character(data[i,2]),as.character(data[i,1])]<-data[i,3]
}
Tmx<-mx
for (i in 1:numnode){
for (j in 1:numnode)
if (Tmx[i,j]!=0)
Tmx[i,j]<-mx[i,j]/sum(mx[i,])
}
diet<-numeric(numnode)
for (i in 1:numnode){
diet[i]<-sum(Tmx[i,])
}
sou<-which(diet==0) #which=position of the certain values.
names(sou)<-nodeID[sou] #names=names the coloumns/rows
Qmx<-Tmx
for (i in 1:length(sou)) {
Qmx<-Qmx[-which(rownames(Qmx)==names(sou[i])),] #find the number of row of the species in sou. The minus sign removes the certain coloumn/row.
Qmx<-Qmx[,-which(colnames(Qmx)==names(sou[i]))] #find the number of coloumn of the species in sou
}
Imx<-matrix(rep(0,(numnode-length(sou))^2),nrow=(numnode-length(sou)),ncol=(numnode-length(sou)))
for (i in 1:(numnode-length(sou)))
Imx[i,i]<-1
vw<-rep(1, (numnode-length(sou))) #repeat 1 for a number of times that is numnode-length(sou).
tp<-solve((Imx-Qmx),vw) #
names(tp)<-rownames(Qmx)
soutp<-sou
for (i in 1:length(soutp))
soutp[i]<-0
tp<-c(soutp,tp)
tp
View(Tmx)
sou
#You need all the species to be connected inside the network to be able to run this program.
data<-read.table("Napoli_connected.txt", header=F)
nodeID<-levels(factor(c(as.character(data[,1]),as.character(data[,2])))) #Factor=categorical variable c=combine as.charachter=whatever2char. This line takes all the values of the first two coloumns and stores them as levels of factor nodeID.
numnode<-length(nodeID)
mx<-matrix(rep(0,numnode^2),nrow=numnode,ncol=numnode)
rownames(mx)<-nodeID
colnames(mx)<-nodeID
for (i in 1:length(data[,1])){
mx[as.character(data[i,2]),as.character(data[i,1])]<-data[i,3]
}
Tmx<-mx
for (i in 1:numnode){
for (j in 1:numnode)
if (Tmx[i,j]!=0)
Tmx[i,j]<-mx[i,j]/sum(mx[i,])
}
diet<-numeric(numnode)
for (i in 1:numnode){
diet[i]<-sum(Tmx[i,])
}
sou<-which(diet==0) #which=position of the certain values.
names(sou)<-nodeID[sou] #names=names the coloumns/rows
Qmx<-Tmx
for (i in 1:length(sou)) {
Qmx<-Qmx[-which(rownames(Qmx)==names(sou[i])),] #find the number of row of the species in sou. The minus sign removes the certain coloumn/row.
Qmx<-Qmx[,-which(colnames(Qmx)==names(sou[i]))] #find the number of coloumn of the species in sou
}
Imx<-matrix(rep(0,(numnode-length(sou))^2),nrow=(numnode-length(sou)),ncol=(numnode-length(sou)))
for (i in 1:(numnode-length(sou)))
Imx[i,i]<-1
vw<-rep(1, (numnode-length(sou))) #repeat 1 for a number of times that is numnode-length(sou).
tp<-solve((Imx-Qmx),vw) #
names(tp)<-rownames(Qmx)
soutp<-sou
for (i in 1:length(soutp))
soutp[i]<-0
tp<-c(soutp,tp)
tp
length(tp)
plot(tp)
View(Tmx)
View(mx)
View(Qmx)
tp
#You need all the species to be connected inside the network to be able to run this program. Watch out also for this: i(rows) is the predator and j(col) is the prey here.
data<-read.table("Napoli_connected_db.txt", header=F)
nodeID<-levels(factor(c(as.character(data[,1]),as.character(data[,2])))) #Factor=categorical variable c=combine as.charachter=whatever2char. This line takes all the values of the first two coloumns and stores them as levels of factor nodeID.
numnode<-length(nodeID)
mx<-matrix(rep(0,numnode^2),nrow=numnode,ncol=numnode)
rownames(mx)<-nodeID
colnames(mx)<-nodeID
for (i in 1:length(data[,1])){
mx[as.character(data[i,2]),as.character(data[i,1])]<-data[i,3]
}
Tmx<-mx
for (i in 1:numnode){
for (j in 1:numnode)
if (Tmx[i,j]!=0)
Tmx[i,j]<-mx[i,j]/sum(mx[i,])
}
diet<-numeric(numnode)
for (i in 1:numnode){
diet[i]<-sum(Tmx[i,])
}
sou<-which(diet==0) #which=position of the certain values.
names(sou)<-nodeID[sou] #names=names the coloumns/rows
Qmx<-Tmx
for (i in 1:length(sou)) {
Qmx<-Qmx[-which(rownames(Qmx)==names(sou[i])),] #find the number of row of the species in sou. The minus sign removes the certain coloumn/row.
Qmx<-Qmx[,-which(colnames(Qmx)==names(sou[i]))] #find the number of coloumn of the species in sou
}
Imx<-matrix(rep(0,(numnode-length(sou))^2),nrow=(numnode-length(sou)),ncol=(numnode-length(sou)))
for (i in 1:(numnode-length(sou)))
Imx[i,i]<-1
vw<-rep(1, (numnode-length(sou))) #repeat 1 for a number of times that is numnode-length(sou).
tp<-solve((Imx-Qmx),vw) #
names(tp)<-rownames(Qmx)
soutp<-sou
for (i in 1:length(soutp))
soutp[i]<-0
tp<-c(soutp,tp)
tp
